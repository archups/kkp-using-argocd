apiVersion: v1
kind: Secret
metadata:
  name: seed-dev-self-kubeconfig
  namespace: kubermatic
type: Opaque
data:
  # You can use `cat ./seed-ready-kube-config`  paste base64 encoded kubeconfig into this Secret.
  kubeconfig: 
